// Flex box display.
@mixin flex-block($size: none) {
    box-sizing: border-box;

    // Old Syntax
    display: -webkit-box;
    display: -moz-box;

    // New Syntax
    display: -ms-flexbox;
    display: -webkit-flex;

    // Global Support
    display: flex;

    @if ($size != none) {
        @include size($size);
    }
}

// Flex display.
@mixin flex($prop: none) {
    @if ($prop != none) {
        @if ($prop == false) {
            // Old Syntax
            -webkit-box-flex: 0 0 0%;
            -moz-box-flex: 0 0 0%;

            // New Syntax
            -webkit-flex: 0 0 0%;
            -ms-flex: 0 0 0%;

            // Global Support
            flex: 0 0 0%;
        }
        @else {
            // Old Syntax
            -webkit-box-flex: $prop;
            -moz-box-flex: $prop;

            // New Syntax
            -webkit-flex: $prop;
            -ms-flex: $prop;

            // Global Support
            flex: $prop;
        }
    }
    @else {
        // Old Syntax
        -webkit-box-flex: 1;
        -moz-box-flex: 1;

        // New Syntax
        -webkit-flex: 1;
        -ms-flex: 1;

        // Global Support
        flex: 1;
    }
}

// Flex Direction
@mixin flex-direction($dir: none) {
    @if ($dir != none) {
        // Old Syntax
        -webkit-box-direction: $dir;
        -webkit-box-orient: $dir;
        -webkit-moz-direction: $dir;
        -webkit-moz-orient: $dir;

        // New Syntax
        -webkit-flex-direction: $dir;
        -ms-flex-direction: $dir;

        // Global Syntax
        flex-direction: $dir;
    }
}

// Flex Flow
@mixin flex-flow($prop: none) {
    @if ($prop != none) {
        -webkit-flex-flow: $prop;
        -ms-flex-flow: $prop;

        flex-flow: $prop;
    }
}

// Flex Basis
@mixin flex-basis($prop: none) {
    @if ($prop != none) {
        -ms-flex-preferred-size: $prop;
        -webkit-flex-basis: $prop;

        flex-basis: $prop;
    }
}

// Flex Shrink
@mixin flex-shrink($prop: none) {
    @if ($prop != none) {
        -webkit-flex-shrink: $prop;
        -ms-flex-negative: $prop;

        flex-shrink: $prop;
    }
}

// Flex Shrink
@mixin flex-grow($prop: none) {
    @if ($prop != none) {
        -webkit-box-flex: $prop;
        -moz-box-flex: $prop;

        -webkit-flex-grow: $prop;
        -ms-flex-positive: $prop;

        flex-grow: $prop;
    }
}

// Flex Order
@mixin flex-order($prop: none) {
    @if ($prop != none) {
        -webkit-box-ordinal-group: $prop;
        -moz-box-ordinal-group: $prop;

        -ms-flex-order: $prop;
        -webkit-order: $prop;

        order: $prop;
    }
}

// Flex Justify Content (Horizontal)
@mixin flex-align-content($align: none) {
    @if ($align != none) {
        $x: $align;

        @if ($x != none) {
            @if ($x == space-around) {
                -webkit-box-pack: $x;
                -moz-box-pack: $x;

                -webkit-justify-content: $x;
                -ms-flex-pack: distribute;

                justify-content: $x;
            }
            @else if ($x == space-between) {
                -webkit-box-pack: $x;
                -moz-box-pack: $x;

                -webkit-justify-content: $x;
                -ms-flex-pack: justify;

                justify-content: $x;
            }
            @else if ($x == start or $x == end) {
                -webkit-box-pack: flex-#{$x};
                -moz-box-pack: flex-#{$x};

                -webkit-justify-content: flex-#{$x};
                -ms-flex-pack: $x;

                justify-content: flex-#{$x};
            }
            @else {
                -webkit-box-pack: $x;
                -moz-box-pack: $x;

                -webkit-justify-content: $x;
                -ms-flex-pack: $x;

                justify-content: $x;
            }
        }
    }
}

// Flex Align Items (Vertical)
@mixin flex-align-items($align: none) {
    @if ($align != none) {
        $y: $align;

        @if ($y != none) {
            @if ($y == start or $y == end) {
                -webkit-box-align: flex-#{$y};
                -moz-box-align: flex-#{$y};

                -webkit-align-items: flex-#{$y};
                align-items: flex-#{$y};
            }
            @else {
                -webkit-box-align: $y;
                -moz-box-align: $y;

                -webkit-align-items: $y;
                align-items: $y;
            }

            -ms-flex-align: $y;
        }
    }
}

// Flex Align Self
@mixin flex-align-self($align: none) {
    @if ($align != none) {
        $y: $align;

        @if ($y != none) {
            @if ($y == start or $y == end) {
                -webkit-align-self: flex-#{$y};
                align-self: flex-#{$y};
            }
            @else {
                -webkit-align-self: $y;
                align-self: $y;
            }

            -ms-flex-item-align: $y;
        }
    }
}

// Flex Wrap
@mixin flex-wrap {
    -webkit-flex-wrap: wrap;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap;
}

// Flex Fill
@mixin flex-fill {
    width: 100%;
    min-height: 100%;
    margin: 0;

    @-moz-document url-prefix() {
        width: 100%;
        height: inherit;
        min-height: auto;
        margin: 0;
    }
}

// Clean Flex
@mixin no-flex {
    @include flex(false);
}

// Flex box shorthand.
@mixin flex-box($direction: none, $option: none) {
    $align: none;
    $size: none;

    @if ($option != none) {
        @if (length($option) >= 2) {
            $align: nth($option, 1) nth($option, 2);
        }
        @if (length($option) >= 3) {
            $size: nth($option, 3);
        }
        @if (length($option) == 4) {
            $size: nth($option, 3) nth($option, 4);
        }
    }

    @include flex-block($size);
    @include flex-direction($direction);

    @if ($align != none and length($align) == 2) {
        @include flex-align-content(nth($align, 1));
        @include flex-align-items(nth($align, 2));
    }
}

// Flex box as column.
@mixin flex-box-column($prop: none) {
    @if ($prop != none) {
        @include flex-box(column, $prop);
    }
}

// Flex box as column reversed.
@mixin flex-box-column-reverse($prop: none) {
    @if ($prop != none) {
        @include flex-box(column-reverse, $prop);
    }
}

// Flex box as row
@mixin flex-box-row($prop: none) {
    @if ($prop != none) {
        @include flex-box(row, $prop);
    }
}

// Flex box as row reserved.
@mixin flex-box-row-reverse($prop: none) {
    @if ($prop != none) {
        @include flex-box(row-reverse, $prop);
    }
}
